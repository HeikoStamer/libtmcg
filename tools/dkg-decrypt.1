.TH DKG\-DECRYPT "1" "July 2017" "LibTMCG 1.3.2" "User Commands"

.SH NAME
dkg\-decrypt \- threshold decryption for OpenPGP (only ElGamal)

.SH SYNOPSIS
.B dkg\-decrypt
.RI [ options ]
.IR PEERS

.SH DESCRIPTION
This program decrypts a message given in armored OpenPGP format, where the
private ElGamal key has been shared between multiple parties by
.BR dkg\-generate (1).
For successful decryption at least t+1 decryption shares from different 
participants are required. The threshold parameter t has been fixed during
distributed key generation and cannot changed at this stage of processing.
.PP
Currently, only ElGamal is supported as public-key algorithm. The program
needs the corresponding .dkg file generated by
.BR dkg\-generate (1).
.PP
There are two modes of operation: First, the interactive mode employs GNUnet
for exchange of the decryption shares, where PEERS must be a sufficient subset
(i.e. at least t+1) of the GNUnet peer identities used during distributed key
generation with
.BR dkg\-generate (1)
including the calling peer.
Second, in the non\-interactive mode the parameter PEERS contains only the
GNUnet identity of the calling peer. Then the corresponding decryption share
is written to STDOUT, and the users must exchange enough shares manually before
decryption can start.

.SH OPTIONS
Arguments mandatory for long options are also mandatory for short options.
.TP
\fB\-c\fR, \fB\-\-config\fR=\fI\,FILENAME\/\fR
use GNUnet configuration file FILENAME (only interactive mode)
.TP
\fB\-h\fR, \fB\-\-help\fR
print this help
.TP
\fB\-i\fR, \fB\-\-input\fR=\fI\,FILENAME\/\fR
read encrypted message from FILENAME
.TP
\fB\-L\fR, \fB\-\-log\fR=\fI\,LOGLEVEL\/\fR
configure logging to use LOGLEVEL
.TP
\fB\-l\fR, \fB\-\-logfile\fR=\fI\,FILENAME\/\fR
configure logging to write logs to FILENAME
.TP
\fB\-n\fR, \fB\-\-non\-interactive\fR
switch to non\-interactive mode
.TP
\fB\-o\fR, \fB\-\-output\fR=\fI\,FILENAME\/\fR
write decrypted message to FILENAME
.TP
\fB\-p\fR, \fB\-\-port\fR=\fI\,STRING\/\fR
GNUnet CADET port to listen/connect (only interactive mode)
.TP
\fB\-v\fR, \fB\-\-version\fR
print the GNUnet version number
.TP
\fB\-V\fR, \fB\-\-verbose\fR
turn on verbose output
.TP
\fB\-w\fR, \fB\-\-wait\fR=\fI\,TIME\/\fR
minutes to wait until start of share exchange (only interactive mode)

.SH "SECURITY"
The current implementation is in experimental state and should NOT
be used in production environments.

.SH "REPORTING BUGS"
Security vulnerabilities or cryptographic complaints should be reported
via an email directly to
<HeikoStamer@gmx.net>.
Reported problems will be published after they've been fixed.
.PP
Please report other bugs via <http://savannah.nongnu.org/bugs/?group=libtmcg>
.PP
Home page of LibTMCG: <http://www.nongnu.org/libtmcg/>

.SH "EXAMPLES"
.TP
The following command performs a non-interactive threshold decryption for a specific participant defined by its GNUnet peer identity. The encrypted
message is read from a given input file.
.PP
.nf
.RS
dkg-generate -i my_msg.asc -n WS3KHEYKKF6QQ6NDQKKCJ2B374RSSXJ05TB5D9W9FYKPPEJ3QKFG
.RE
.fi
.PP
At least t+1 participants must run such a process on the same message to get a corresponding decryption share, where t is the t-resilience used during key generation.
The shares must be exchanged between them in a secure way, i.e., authenticated and confidential. Finally, the received decryption shares are given to the
program one per line. After giving a trailing end of data sign (^D) the decrypted message is printed to STDOUT.
.PP
The following command performs an interactive threshold decryption with three participants defined by their GNUnet peer identities. 
.PP
.nf
.RS
dkg-decrypt -w 10 3PT18Z2345NA6FM86BKVJ32DK88KXF0YWKTDPPQX1QJMBPEF4530 S41SNHFSGVR3A88ZPX3ZB3BKD2EN0Z29VEKKS1BMVMQNMWSRG3N0 WS3KHEYKKF6QQ6NDQKKCJ2B374RSSXJ05TB5D9W9FYKPPEJ3QKFG
.RE
.fi
.PP
At least t+1 parties must run such a process on the same message. The program waits ten minutes before the threshold decryption protocol is started, because establishing a CADET channel with GNUnet may take some time.

.SH "SEE ALSO"
.BR dkg\-generate (1),
.BR dkg\-encrypt (1),
.BR dkg\-sign (1)

